REFINEMENT Buffer_r ( qlen , ELEM )
REFINES
    Buffer
SEES
    Resp

ABSTRACT_VARIABLES
    aa , start , used

INVARIANT
    aa : 1 .. qlen --> ELEM &
    start : 1 .. qlen &
    used : 0 .. qlen &
    used = size ( buff ) &
    ! ( xx ) . ( xx : dom ( buff ) => buff ( xx )
        = aa ( ( ( start + xx - 2 ) mod qlen ) + 1 ) )

INITIALISATION
    ANY elem WHERE elem : ELEM
    THEN
        aa := ( 1 .. qlen ) * { elem }
    END ||
    start := 1 ||
    used := 0

OPERATIONS
    add ( xx ) =
    PRE xx : ELEM & used < qlen
    THEN
        // -1 is used for making indexes from 0 -- allows mod to work
        // +1 is added at the end
        LET index BE index = ( ( ( start - 1 + used ) mod qlen ) + 1 )
        IN
            aa := aa <+ { index |-> xx } ||
            start := ( ( start - 1 + 1 ) mod qlen ) + 1 ||
            used := used + 1
        END
    END ;

    ee <-- remove =
    PRE used > 0
    THEN
        LET index BE index = start
        IN
            ee :: ran ( { index } <| aa ) ||
            used := used - 1 ||
            IF start = qlen
            THEN
                start := 1
            ELSE
                start := start + 1
            END
        END
    END ;

    rr <-- emptyquery =
    IF used = 0
    THEN
        rr := yes
    ELSE
        rr := no
    END ;

    rr <-- fullquery =
    IF used = qlen
    THEN
        rr := yes
    ELSE
        rr := no
    END ;

    oo <-- contentsquery =
        oo := used
 END
